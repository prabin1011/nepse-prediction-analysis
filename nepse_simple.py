# /bin/env python

# -*- coding: utf-8 -*-
"""Untitled24.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k8T91ug1-HAPxvYj9d88EUTIguMZ3QwO
"""

asadas = """<html><head>NEPSE SIMPLE</head><header>
		
	<!-- Top header menu containing
		logo and Navigation bar -->
	<div id="top-header">
			
		<!-- Logo -->
		<div id="logo">
			<a href="https://sumityadav.com.np">
			<img src= https://rockerritesh.github.io/nepsesimple/android-chrome-192x192.png>	
			</a>	
		</div>
				
		<!-- Navigation Menu -->
		<nav>
			<ul>
				<li class="active"><a href="https://rockerritesh.github.io/nepsesimple/index.html">Home</a></li>
				<li><a href="https://rockerritesh.github.io/nepsesimple/todaysummary.html">Today Summary</a></li> 
				<li><a href="https://rockerritesh.github.io/nepsesimple/marketsummary.html">Summary</a></li>
				<li><a href="https://rockerritesh.github.io/nepsesimple/marketdata.html">Top Value Data</a></li>
				<li><a href="https://rockerritesh.github.io/nepsesimple/todayindex.html">Indices</a></li>
			</ul>
		</nav>
	</div>

	<!-- Image menu in Header to contain an Image and
		a sample text over that image -->
	<div id="header-image-menu">

	</div>
</header>

<script button.addEventListener('click', () => {
  document.body.classList.toggle('dark')
  localStorage.setItem(
    'theme',
    document.body.classList.contains('dark') ? 'dark' : 'light'
  )
})
if (localStorage.getItem('theme') === 'dark') {
  document.body.classList.add('dark')
}></script>
     
    <style>
        body{
        padding:10% 3% 10% 3%;
        text-align:center;
        }
        img{
            height:140px;
                width:140px;
        }
        h1{
        color: #32a852;
        }
        .mode {
            float:right;
        }
        .change {
            cursor: pointer;
            border: 1px solid #555;
            border-radius: 40%;
            width: 20px;
            text-align: center;
            padding: 5px;
            margin-left: 8px;
        }
        .dark{
            background-color: #000;
            color: #fff;
        }
	 
    </style>

<body>
<iframe title="Nepse Today  Data" aria-label="Table" id="datawrapper-chart-yAfsH" src="https://datawrapper.dwcdn.net/yAfsH/1/" scrolling="no" frameborder="0" style="width: 0; min-width: 100% !important; border: none;" height="1475"></iframe><script type="text/javascript">!function(){"use strict";window.addEventListener("message",(function(e){if(void 0!==e.data["datawrapper-height"]){var t=document.querySelectorAll("iframe");for(var a in e.data["datawrapper-height"])for(var r=0;r<t.length;r++){if(t[r].contentWindow===e.source)t[r].style.height=e.data["datawrapper-height"][a]+"px"}}}))}();
</script>

"""


import requests
import pandas as pd
import numpy as np
import openpyxl
import matplotlib.pyplot as plt
import bs4
import html5lib

url = "https://www.nepalipaisa.com/Market-Mover.aspx"
html = requests.get(url).content
df_list = pd.read_html(html)
df = df_list[-1]

df1 = df.sort_values(by=["Closing Price"])
df1.pop("Symbols")

slice_ = ["% Change"]


def highlight_max(s, props=""):
    return np.where(s <= 0, props, "")


df2 = df1.style.apply(
    highlight_max, props="color:red;", axis=0, subset=slice_
).set_properties(subset=slice_)


loc = "nepse_simple.xlsx"

df1.to_csv("mydata.csv")

df1.to_html("todaysummary.html")

df2.to_excel(loc)

oxl = openpyxl.load_workbook(loc)
oxl.sheetnames

sheet = oxl.active

ws = sheet
dims = {}
for row in ws.rows:
    for cell in row:
        if cell.value:
            dims[cell.column_letter] = max(
                (dims.get(cell.column_letter, 0), len(str(cell.value)))
            )
for col, value in dims.items():
    ws.column_dimensions[col].width = value


oxl.save(loc)


url2 = "https://www.nepalipaisa.com/Indices.aspx"
html2 = requests.get(url2).content
df_list2 = pd.read_html(html2)
df22 = df_list2[-1]

data2 = np.array(df22)
data2 = np.flip(data2)
plot = data2[0 : data2.shape[0], 2]

plt.figure(figsize=(40, 25))
plt.plot(plot, "go--")
plt.savefig("graph.png")

# FOR STOCK

urlstock = "https://www.sharesansar.com/market"
htmlstock = requests.get(urlstock).content
df_list_stock = pd.read_html(htmlstock)

df_stock = df_list_stock[3]
df_stock.to_csv("stock.csv")

# FOR IPO


urlshare = "https://www.sharesansar.com/?show=home"
htmlshare = requests.get(urlshare).content
df_list_share = pd.read_html(htmlshare)

df_share = df_list_share[2]
df_share.to_csv("ipo.csv")
df_share.to_html("ipo.html")

# new way direct from nepalstock.com

nepse = requests.get("http://nepalstock.com")
soup = bs4.BeautifulSoup(nepse.text, "html5lib")
category = soup.find_all(class_="panel-body")

html = asadas + str(category[3]) + "</body> </html>"
with open("marketsummary.html", "w") as output:
    output.write(html)

html = asadas + str(category[2]) + "</body> </html>"
with open("marketdata.html", "w") as output:
    output.write(html)

html = asadas + str(category[4]) + "</body> </html>"
with open("todayindex.html", "w") as output:
    output.write(html)
"""
nepse = requests.get("https://nepalstockinfo.com")
soup = bs4.BeautifulSoup(nepse.text, "html5lib")

category = soup.find_all(class_="col-md-6")
html = "<html><head></head><body>" + str(category[2]) + "</body> </html>"
with open("marketsummary.html", "w") as output:
    output.write(html)
"""
df = pd.read_json("https://nepalstockapi.herokuapp.com/allprice.php")
df1 = df.sort_values(by=["nooftransaction"])
html = df1.to_html()
html = asadas + html + "</body> </html>"
with open("index.html", "w") as output:
    output.write(html)
